// variables
$fuenteTipica: Arial, Helvetica, sans-serif;
$colorFondo: #ccc;
$colorLetra: red;
$colorSecundario: rgb(122, 20, 20);
$tamanoFuente: 45px;

// USO de variables
body {
  background-color: $colorFondo;
}

h1 {
  color: $colorLetra;
  font-family: $fuenteTipica;
  font-size: $tamanoFuente;
}

p {
  color: $colorSecundario;
}
/*sass --watch(para q sass vea si hay algun cambio y  lo compile) input.scss(fichero q se esta utilizando) output.css(a que lo quiero combertir)*/

/*ANIDACION */
.caja {
  border: 1px solid black;
  width: 500px;
  margin: 0px auto;
  text-align: center;
  background-color: white;
  padding: 10px;

  h1 {
    color: blue;
  }

  p {
    color: green;
  }

  .info {
    font-size: 10px;

    .autor {
      font-size: 15px;
      color: orange;
    }
  }
}

// mixin / funciones
@mixin crearBordes() {
  border: 3px solid black;
  border-radius: 10px;
  box-shadow: 0px 0px 5px black;
}

@mixin crearBordesParametros($color, $size, $colorSombra) {
  border: $size solid $color;
  border-radius: $size;
  box-shadow: 0px 0px $size $colorSombra;
}

.caja {
  @include crearBordes();
}

.listado {
  @include crearBordesParametros(red, 25px, black);
}

.listado2 {
  @include crearBordesParametros(green, 40px, orange);
}

// herencia
%alert-normal {
  border: 1px solid gray;
  background: #eee;
  color: black;
  padding: 10px;
  width: 80%;
  margin: 20px auto;
}

.alert {
  @extend %alert-normal;
}

.danger {
  @extend %alert-normal;
  color: green;
  border-color: green;
}
.exito {
  @extend %alert-normal;
  color: red;
  border-color: red;
}

// Operadores
$caja: 200px;
$ancho: 900px;

h1 {
  font-size: 20px + 5px -10px;
}

.clearfix {
  clear: both;
}

.cajas {
  width: 900px;
  margin: 0px auto;
}

.caja {
  width: $caja / $ancho * 100%;
  float: left;
  margin: 10px;
}

// Condicionales
$colorFondo: salmon;
h1 {
  // @if $colorFondo != #ccc {

  @if $colorFondo == #ccc {
    color: black;
  } @else if $colorFondo==black {
    color: green;
  } @else {
    color: blue;
  }
}

// Bucles (for, each y while)
$contador: 1;
@for $contador from 1 to 10 {
  // .listado2 ul li:nth-child(#para pasarlo por parametro{$contador por donde se valla en ciclo}) {
  .listado2 ul li:nth-child(#{$contador}) {
    color: orange;
    // font-size: #{$contador}px
    font-size: $contador * 3px;
  }
}
